package com.example.accessingdatamysql.product;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/product") // This means URL's start with /demo (after Application path)
public class ProductController {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private ProductRepository productRepository;


	@GetMapping(path="/getProductById")
	public @ResponseBody
	Optional<Product> getProductById(@RequestParam(value="id", defaultValue="1") Integer productId) {
		// This returns a JSON or XML with the users
		return productRepository.findById(productId);
	}

	@GetMapping(path="/getProductPriceById")
	public @ResponseBody
	Integer getProductPriceById(@RequestParam(value="id", defaultValue="1") Integer productId) {
		// This returns a JSON or XML with the users
		return productRepository.findById(productId).get().getPrice();
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Product> getAllUsers() {
		// This returns a JSON or XML with the users
		return productRepository.findAll();
	}
}
